%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: d03f84ab4ec20274e86f91d6e2a30257, type: 3}
  m_Name: Full Implement
  m_EditorClassIdentifier: 
  Icon: {fileID: 2800000, guid: 3543eaffc785cee4a879a77c6b51fede, type: 3}
  SubPages: []
  Components:
  - VisualID: 1
    JsonData: 
    TextData:
    - Full Implement
    ObjsData: []
    VisualVersion: 0
  - VisualID: 2
    JsonData: 
    TextData:
    - "First you need to extend from RuntimeDrawer<T>, \nwhere T is your value type.\n\nwe
      use below type as sample DataType"
    ObjsData: []
    VisualVersion: 0
  - VisualID: 7
    JsonData: '{"MaxHeight":300,"LineHeightPercent":125}'
    TextData:
    - "    [System.Serializable]\r\n    class SampleData\r\n    {\r\n        public
      string name;\r\n        public int id;\r\n        public float rate;\r\n   
      }"
    ObjsData: []
    VisualVersion: 0
  - VisualID: 0
    JsonData: 
    TextData: []
    ObjsData: []
    VisualVersion: 0
  - VisualID: 2
    JsonData: 
    TextData:
    - Than define a SampleDrawer
    ObjsData: []
    VisualVersion: 0
  - VisualID: 7
    JsonData: '{"MaxHeight":300,"LineHeightPercent":125}'
    TextData:
    - "class SampleDrawer : RuntimeDrawer<SampleData>\r\n{\r\n    public override
      void UpdateField()\r\n    {\r\n        throw new System.NotImplementedException();\r\n   
      }\r\n\r\n    protected override void OnCreateGUI()\r\n    {\r\n        throw
      new System.NotImplementedException();\r\n    }\r\n}"
    ObjsData: []
    VisualVersion: 0
  - VisualID: 2
    JsonData: 
    TextData:
    - "at least you need to implement 2 method.\nUpdateField()\n    this is use to
      repaint value on visual element\n\nOnCreateGUI()\n    this is use to generate
      layout for this drawer\n\nnow let's implement it."
    ObjsData: []
    VisualVersion: 0
  - VisualID: 2
    JsonData: '{"Type":4}'
    TextData:
    - Use LayoutIine() / LayoutExpand() to set layout mode
    ObjsData: []
    VisualVersion: 0
  - VisualID: 7
    JsonData: '{"MaxHeight":300,"LineHeightPercent":125}'
    TextData:
    - "class SampleDrawer : RuntimeDrawer<SampleData>\r\n{\r\n    StringDrawer nameField;\r\n   
      IntegerDrawer idField;\r\n    FloatRangeDrawer rateField;\r\n    public override
      void UpdateField()\r\n    {\r\n        nameField.SetValueWithoutNotify(value.name);\r\n       
      idField.SetValueWithoutNotify(value.id);\r\n        rateField.SetValueWithoutNotify(value.rate);\r\n   
      }\r\n\r\n    protected override void OnCreateGUI()\r\n    {\r\n        LayoutExpand();\r\n\r\n       
      nameField = (StringDrawer)RuntimeDrawer.Create(\"\",\"Name\");\r\n        idField
      = (IntegerDrawer)RuntimeDrawer.Create(0, \"ID\");\r\n        rateField = (FloatRangeDrawer)RuntimeDrawer.Create(0f,
      \"Rate\", new RangeAttribute(0, 1));\n        \n        Field.RegisterValueChangedCallback(evt
      =>\r\n        {\r\n            value.name = evt.newValue;\r\n            evt.StopPropagation();\r\n       
      });\r\n        idField.RegisterValueChangedCallback(evt =>\r\n        {\r\n           
      value.id = evt.newValue;\r\n            evt.StopPropagation();\r\n        });\r\n       
      rateField.RegisterValueChangedCallback(evt =>\r\n        {\r\n            value.rate
      = evt.newValue;\r\n            evt.StopPropagation();\r\n        });\r\n   
      }\r\n}"
    ObjsData: []
    VisualVersion: 0
  - VisualID: 0
    JsonData: 
    TextData: []
    ObjsData: []
    VisualVersion: 0
  - VisualID: 2
    JsonData: 
    TextData:
    - 'Finaly add a CustomRuntimeDrawer attribute to define usage

      and target
      value type'
    ObjsData: []
    VisualVersion: 0
  - VisualID: 7
    JsonData: '{"MaxHeight":300,"LineHeightPercent":125}'
    TextData:
    - '[CustomRuntimeDrawer(typeof(SampleData))]

      class SampleDrawer : RuntimeDrawer<SampleData>'
    ObjsData: []
    VisualVersion: 0
  - VisualID: 2
    JsonData: 
    TextData:
    - 'here are the properties you can modify

      those value will affect RuntimeDrawerFactory
      while create drawer.'
    ObjsData: []
    VisualVersion: 0
  - VisualID: 3
    JsonData: '{"row":4,"col":2,"anchors":[3,3],"mode":1}'
    TextData:
    - Priority
    - 'if 2 Drawer has same DataType,

      higher will hide lower'
    - DrawDerivedType
    - dose it apply on DerivedType
    - DrawAssignableType
    - dose it apply on AssignableType
    - RequiredAttribute
    - 'dose it need a Attribute to create

      ex. RangeAttribute for int / float'
    ObjsData: []
    VisualVersion: 0
  - VisualID: 2
    JsonData: '{"Type":4}'
    TextData:
    - 'Check Priority to avoid drawer type collision.

      -> Tools / NaiveAPI
      / RuntimeDrawer Debug'
    ObjsData: []
    VisualVersion: 0
  - VisualID: 2
    JsonData: '{"Type":4}'
    TextData:
    - 'If you defined RequiredAttribute.

      You need to override ReciveAttribute
      to handle attribute pass in.'
    ObjsData: []
    VisualVersion: 0
  - VisualID: 7
    JsonData: '{"MaxHeight":300,"LineHeightPercent":125}'
    TextData:
    - 'public override void ReciveAttribute(Attribute attribute)

      {

      }'
    ObjsData: []
    VisualVersion: 0
  - VisualID: 0
    JsonData: 
    TextData: []
    ObjsData: []
    VisualVersion: 0
  - VisualID: 2
    JsonData: 
    TextData:
    - Code above will create drawer like below.
    ObjsData: []
    VisualVersion: 0
  - VisualID: 5
    JsonData: '{"scale":0.699999988079071,"url":"","base64":"iVBORw0KGgoAAAANSUhEUgAAAYEAAABkCAYAAABgp4yhAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAABERSURBVHhe7d35X9RW2wbw91952rqAsiiLClRAdhCsiqJUUVGqPFptbd2qVWTRgliQilt9VKq2dasbKiJq1bZqC4iPbKKAIEjF/S+437lv36QzkEFeIUziXD98P05OTjIDknMl52Ry/udf/xpMAADgnBACAABODCEAAODEEAIAAE4MIQAA4MQQAgAATgwhAADgxBACAABODCEAAODEEAIAAE5sQELA09OHgoPDKDQ0kry9R9N77w3RrDcQ+L0DAoLIxcVdc31X/NkDAoJVvr7+NGTIcM26AABmo3sIzJ//b3r16hW9fPlS8OutW7c5LAhcXT3o6dOntHjx55rru8rPL5DPbO3vv/+mKVOma9a3Jzk5hXbu/F5zHQCAo+gaAtHRcfTs2TOqrLwlZ9A+Pn50+PARaUhTUlI1t9Hb24TAkydP5GeJjBxPc+akUE1NLT1//pxSUxdpbqOFg49/7t5egQAADARdQ2DhwsXS8M2dO18tGzp0OG3a9C1NnDhFLVu/PoOqqqro3r17lsCotGmgCwu30Z071XTqVDHdvdtAFRWVlv19Qr///gc1NHD9WxQbO1Gtv2LFV1ReXkH79x+g+vq7VF1dTbm5eep6rRDYvDlP3uP+/ft0/foNCgmJVNdxCHR2dtL77w9Vy9zdvaR+dXWNWjZokCsdPfoL1dbWWj5XA126dJn8/MbKuu3bd9KjR4/kd9HY2Ejbtu2Qch+fMXT2bIl8TnbmzDn5/Sj7BADQm64h4O8fSB0dHdTa2koFBVtp8uSp9MEHLjZ1+IqAG8fTp4tp1ao1dO3ab9LoBgaGyvqffvpZ1l+9eo2yszfRgwcPZPncuRLKzNwo+29qarLUfd29tHFjNr148YIeP34sjTs3zFyfg4fXdw2BnJzNsn7//oO0bl26JQga5T3GjPlQ1muFAMvK2ij7UZZLS8tkP4WFOyg9PUs+V11dnYTD5MkJVFZ2UdZ//XUaTZo0VbrDOEj4Sok/G/9svP7y5V9t3gcAQE+6jwnwWXpp6QVpmLmRa2pqppUrV6thwI3y4sVLyc1tBI0dO04aYq6nNNJKCHz4YbAs79ixS7pnuHHl5UOHXncvKWfdr0PgJcXFTZJlxg0wd+Hwa+sQ4Ia9tfUh/frrFRm0ZsnJn8hnXbZspdS3FwJLliyV9/Xw8JblcePCKSlpDnl5jaLw8Gg6ceKU5XM+pWHDPGW9VncQ/244EHx9/SgmJs5ylVMhAdT1vQAA9KJ7CCi40efuoStXrkpjuGTJF1I+enSAdPUog8bcwPO/n332er0SAjymwMt8pt3R8be6Xz6D5/X+/kGyzCHAjbb1HTzffVco++XX1iEQGBgi22rJyyuQ+vZCYO3a9TIuoAxwz549l/773zvq9nwlwu/TUwgsX76KmpubbbZpaWlBCADAgNE1BBYsWEi7d++hwYOH2ZTz2ffBgz/J62PHjktjmpaWQSNHjrI0pvOkQexLCHDjy429Uoc/Q3v7I3ltHQL8fnzWz5+BB30VU6dOt5zRj5b6WiEwdKibjE3U19erZdx489XGJ5+kynvs3VvUYwgMGuQi67n7a+bM2ZYrCi/pCkIIAMBA0jUEuNuHG74DB36UM2a2a9duKVu9eq3U4a4YvuWSG1Zer/Sd9yUEeHn79l2yzI05B8DVq7/JsnUI8PL58xeora2NQkOj5P3XrFkn2y9cuETWKyHAVzK8nr/v8Ndf5VJH+RkYD/zu2bNP6vj5Bcp66xAoKCiUMv6OAi/z/jj8MjI2yDZRUbGyHiEAAANJ1xDgK4AjR45K48Zn3Nzo8evjx0+q3TV866XSYHKXTU1NjSz39UqA3+/hw4eyz87OJzR+/EeyvmsI8FgCd+NwdxQ39ryv4uKz6tULhwCX8TiD0mXFvvhiuaxX8B1AXM774J/zxo2bNiEQFhYlg8C8D74K4oafu8F4G+4G4s/LYwIIAQAYSLqPCXCDFhwcTgkJH9O0aTNkALXrHULcEE+fPkO+gMWNPQfDiBE+si4oKJTi46epjTJ/a5cHU5Vtg4LCZL0SKsqYAA/ypqZ+SvPmLVDv9GH8eXj7kSN91TIXFzcJiYSERGmsrT8fh0t8fIIqJmaCdN0o661FRMRQYmKSfH5+Tz67t27QefyD34N/Jl7mIOD98TY8mMx3RPE+lPoAAHobsIHhgaI1MAwAANreuRDgWztv3vyz22A0AAB0986FAAAA9B5CAADAiSEEAACcGEIAAMCJIQSg34zxCyI/ADAM31EBmseqNYQA9AtvHz8KCx9P4eGxAGAQIaHRcmxqHbMKhAD0mYeHjwQAi4iMAwADCI+IVY9LPka1jl2GEIA+U/7Q+I8uMnoCABhARJRtEGgduwwhAH2mXHpq/SECgANFTVCPT61jlxkqBAoLt6tP2bSWk5OrPm8HjAchAGBQZgsBnoaSHy1tXcYPWeO5f/nhbdblYBwIAQCDMmMI8OTt/Ix9pUwrBPgpn/wk0KSkZHJ1/WemLje3keqTO/mppfxaqc/L/HRPpa6CJ3afPn2mPMG06zroHYQAgEGZMQRmzZorjX5YWLSUdQ0Bnmu4quq2TOz+448/y7P4uRHndWPHhlBDQwNduFAmE8zzZO9r16ZZli/SiRMnZX5jntRGeT9+jHN1dTWdPHmKzp4todraWnJ3H6muh95BCAAYlBlDgPv+eXYvnr2Ly7qGwNSpiZSXt0Xd5tNPP5fZwfg1hwBP3BIeHiXLPAsYT+LCjT0v89wDHBo8ixkv88QvKSkL5DXLytpIp08Xq8vQOwgBAIMyawjwa27YeaBYqzvI3d1LJqfhxn3Llq1UXl4h5RwCjY1Naj327Nk/k8HzhDU81wDP8zto0DBqb2+XLiNFbOxECQ3MRfD/gxAAMCgzh8CYMWNlakhPT2+bEJg5cw49f/6C7t27TwcP/iiT2b8pBJRG3ToEeP/c4J85U9KNMiUk9A5CAMCgzBwCbNq0j2UC95aWVjUESksv0JIlS63qzHirEOCrAx4zwBhA3yEEAAzK7CHAd/WcOXNWJmNXQuCHHw7Q4cNH5TXP2cuTs79NCPDy3r1FVFJSSj4+fjR8+AgJmN2799hsD2+GEAAwKLOFAA/UWocA4yDg6SK5v56XfXzG0KFDR6SLqKzsktwZxHcJ8ToOgWvXfrPZvqKi0iYEeMBZua2Uy9PSMuR9OUjy8grUutB7CAEAgzJbCIA5IQQADAohAANB+SPjB1Zp/iECgEPI00QRAqC3wKAw9UmFfOYBAI7HAaAcl3yMah27DCEA/SI0LEb+2JSzDgBwPD4m+djUOmYVCAHoNwgBAGMJCo7QPFatIQQAAJwYQgAAwIkhBKDfoDsIwFjQHQQDhgMAIQBgLMpxqXXMKhAC0GfKHxrTulcZAAYef2/H+tjUOnYZQgD6TDnr0PpDBAAHisI3hmEAIAQADMpsIXDrVhV5eY2W17m531J9fb2oq6ujGzf+pPT0rG7bgOP1FAKrvlpr+T+8S486OqjW8v/470WfadYDAB2YLQR47gB+rDO/5lnFior2k79/IAUEBFNiYpI87ZPLum4HjmUvBJJmz6PW1of05bJVFBM7SQKhvf0RTZue1K0uAOjA7CHQ9dn+np4+1NzcLFNBWpeDY9kLgX379tO5kvM2ZVVVt2nDN5tsygBAJ+9aCLwu30E7d37frRwcx14IXLx0mfK2fGdTtq/oAP1y/KRNGQDo5F0MgTVr1lFx8Zlu5eA49kLg5s2/KC09y6Ysd3O+hIN1GQDo5F0MAR4cPnbsl27l4Dj2QuCP6zcoc0O2TdmWgkI6X1pmUwYAOnkXQ6DU0oCsWPFVt3JwHHshcLr4LBX9cMCmrOT8Bdqzt8imDAB08q6FwIoVq+ju3QZycXGzKQfHshcCmVnZdKe62qaspaWFPl+63KYMAHRi9hD488+/ZBD4++//Q5cuXaaamlqKi5vUbTtwLHshEBXzEf3xxw3pFtq56z9UXlFJF8ouUvT4id3qAoAOzBYC69dnkrv7SHk9a1YyZWRsEOvWrZflQYNcu20DjmcvBFjshHj6Nr+Ajh47QTm5efJ9Aa16AKADs4UAmFNPIQAADoQQgIFg/aRCzT9EABhweIooDJgPPnBR/9CUsw4AcDzluORjVOvYZQgB6BcuLu4IAQCDCR4XKcem1jGrQAhAv3H38CYPADAMN7fXN9r0BCEAAODEEAIAAH3k5uZlSMOGj9D8vNYQAgAAb+m994bQ0KFuhh0P4zEB/nxan12BEAAAeEv8BVblDhytRtjRlM/GYaX1+RlCAADgLSh3xCm07tV3JHxPABwuJCSaVq7MpA0bCig3dyfl5Gyjdes20ezZqTRkCB4CCObm4uKhnnFrNcKGYLZvDC9cuJgWLVoiUlJSKSAgSLMeGN/cuZ9Kw28Ph4G3t7/mtgBm8KYQ4Aco5n6bT1sLd9CMmcmadXRnthBobW2lU6dO07Fjxy3/FlNTUzNlZ2/qsT9LERwcRvv3H9RcBwMrKWmBZsPfFQfBkCHDNfcBYHQ9hcCUhBnU1tZOJedL6fiJU9RiaduWLf+qWz3dmTEEAgND1eXRowPo+fPn5OnprZZxP9zYsePI1/efs0ge/Z48OYFu3aqiUaMCyNXVQ133/vtDyd8/yLKvD9Uy0M/gwcPom28KNRt9LXPmLNTcD4DR9RQCxcVnZVIlZZln2KuuqbGpMyDMHgI88v7y5Utp2Hk5KSmZHj3qoIaGe9TS0koHD/4kjXxQUCg1NjbS06dP6d69++qcA+7uXnT79m3LuiZqbn5ApaUX8Dhqnb2pG6irjIx8S0CPBTAF60cw2AuBjyYl0IsXL2zKWFtbG82Zu6Bbua7MHgI+PmPklzlihK8sV1fXUHx8grzm/wwOCGXcICIiRq4ElG0ZB8DSpcvU5aKiAxIc1nWgf2Vm5ms29vbk5GzXPNgAjKg3ITBrTgq1t7fblDGeXGl9ela3cl2ZMQTKyyvouuWXVVl5S5KTZxjTGhPw9w+UEBg3LlyWtUKgs7PTps85JCSSOjo6enyiHvTNpk07NBv7nmgdbABG1JsQmDsvlR4+bLMpY1euXqNvcjZ3K9eVGUOAz9w//niWTCnJZ/LW6/Pzv6O6ujoJiCNHjtGTJ08sIRAh67qGAHcTvXr1Sqao/Ee5THeIwUj9rFqVqdnQ28PjB1oHG4AR9SYEZiQly8mmdRmrqKik1WvSupXryszdQTzw++zZM2nceZnP/Llf388vUJb56oDHAOyFAOMrgd48RQ/6T1hYnGZjb8/XX2fTsGGeAKZg3YtgLwTGx02mx48fU9KseWrZpPhp0h5NnpJoU1d3Zh8TWL16LdXX35XB3FGj/KmpqUn+5QBISEj8v+6g1yHAg8N8S6mX12h1+ytXrlKO5fKL//NcXd3l9Z49+9T1oI/09DzNBl9LeHic5j4AjM5eCLAtBYV05061DBJHj59IPx86It1BXevpzmwhwF091iHAk85zMMTGTpRlHh9oaWmxXBE0U2lpmXQX8e2iSv1Dhw7LvbmJiUmyzKl97lyJ1H/w4AFdvHhJrQv68fcPoY0bt2o2+tbmz/9cc3sAM+gpBGInxNPvv1+XK4LHjzslEBJnzO5WT3dmCwF4d/j7j7N7p1B29jZKTl6kuR2AWfQUAoaBEABH4m674OBI+vLLNLlrKCMjz3KVNs9y8PQ83R2AGSAEAACcGJ/MWD+lU7MRdiA8RRQAQGc87qg0ssoZt5G8KQAYQgAAoI+MGgJBwa/vnuwJQgAAwIkhBAAAnBhCAADAiSEEAACcGEIAAMCJIQQAAJwYQgAAwIkhBAAAnBhCAADAiSEEAACc1mD6X4HKqtfqatcHAAAAAElFTkSuQmCC","mode":2}'
    TextData: []
    ObjsData:
    - {fileID: 0}
    VisualVersion: 0
